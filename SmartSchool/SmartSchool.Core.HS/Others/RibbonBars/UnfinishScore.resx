<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOpen.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAAoCAYAAACiu5n/AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALCwAA
        CwsBbQSEtwAAFxZJREFUaEOtmglcU1f2x2OntdNOl5m2dj7TznSx1mnr0ta22s1q2387XdVa27q2VaiK
        igoCsgjIIqvKvi8JJGwhbIEEEkhOEhKWsO/7DiogRAibuJw5CZBKxZlx/sPn8/289+5buL9zzj333Pey
        CBEZc39CoZChHdUyFi9ezFj8wGLG6Mgoo621lfHQIw8xnnj8Sca9997HuHZtmvH4Y4/ddt2jjzxqaNOO
        jS66Nn3zkZt4/eXrN66vWbb0hVefevqpZwYHL0/Q//JqbW0tVigUjI0bN9LzrjPuuWfRopt4854/PPiH
        xT3d3a+sWr16yUsvvVQukUqGbm175ZVXyqanpwcNHV5gh+77V6cZDJ3gOQQCASMxIZGRmpLKyBJmMeIT
        4hkuLs4MH7/zDDaHw0hITGLEstmMW6+LiopaFBIS+jtuUtL9QUGBS+n85sSkBBcAKa+rqyNvcmpSev3G
        Dbh5E6G6uhrEYvH2iIgIxp49exgxMaxFkRHRj4aHh78dHBJ8SCwShdXW1mTn5eWlJSUl/XRrGwCkEOvq
        6+sZNTU1d+RWPQvt/1eCuVzu78LCwn7/888/P85isdYxmayDWZmZYaWlJeKB/n64cf0G3CCBk9dvQv/o
        FLRe0oJm8ib09vaARCJxZDKjV8wZRiqV8Do62vIuXLwgbWhshHxlPsjlMiBjSRcyVl1dHYMMd0f+J4LP
        +55jxMTG3s+Ji3+UzWa/kJaW9jVtHRPi45PramtBqx0D+kdwk5iYvgkDI1eh5/I4dA5oofXiFShv7oHq
        5g4oKCwCoUAgUquLc1tbWqC7uxvU6hKQKxRQVlYKdzSWdgouVRVCOeucp8Zo5erpr+5/iniAWEQwVEql
        gf9acKYg8x42h/2ws7PTXwKC/NfxUlJ+4WdmBSuVSml7exvQ2NSL1DFOIgfJk73D49BNItsuaKCmtQcK
        ymogQygCXkoqVFVWkof7oKOjA2j8AhkNDMaiZ90cHYKJUS0MXJnUG6trcAw6BsagpW8IBspVMOW2A4aN
        V+dMfPtYGIk8RXxJPKoTXVFWypjjbgXfz2FznuQmcV8SZAs2Z/DT7Xk8XrK6tASGhoYMAnUiJ6avw5B2
        EvpHpqBn8Ao0d12EyoYWkBeWgFCUpxdVXV0F7R3tUENRkJ+vBDIW3GYsio7hUjlcCbOG4YTzcLGsCDr6
        LkN91yCUNfdCS0MjaM4ehOl9y+HC6e3S/r0rz5BID4JFvE/cB1IJY467EpyZmWlCSSVQma/MbWioh/Hx
        mVCdY+o6wtjkDRgmoRcGNNDRcwkq65tAIlNAOp9PIVuo92BnVyeUlpUAJTf4V8YavHwFhiU8mDj2HkwZ
        vQRT3y+By0c/ADWfB5lSNUBpA3Qr82DC+BW4avwy9GREAsfDwWxi00MbSWgEcZD447nzPow57koweZOy
        6c15InXZdXL6BmgnroGGxtLl0UlQFalBoVSBipgzDCUTGo/qeW0LGevKxDQZ7CoM0XMulSrhivlHMHr0
        XRjhR0F3tBtoDr4BA657oDOHB301VdCnEMH4L6tg/Px+uNJGkaJQ+l40Xb+BhAYTB3SCQSZlzHFXghMS
        Ek5fu3ZNL3j62k3Qjl+FQY0Wuvs1cHFoFGpbOqGoqgEWMsx/aqzm7ov6kB29PAwXw06B9qcXoT85GIbJ
        2/00xkcj7GD669/DmNEr0G/1BdRxo2DM5A3QhFrDjb5WkCWwhJf2LLcioWnE/xGLszK5jDnuSjCTydzT
        1dU1k4gmp6Cl+xKoKpsow3bB4MgYtPf1QxuFcZ5UBr81jARub1vIWOrqJui6SIL7ukHrdxjGLD+G7kI5
        Pbcf6gtVoPE9AlNb/wTanc9AfXwQNIIItGYbYMR+C1yLc4ELdltgbNvjKSTUZjZbL5KKkxlz3JXg6Ojo
        94qLi/WCJ6co9Ea0UFbXpheua9NOTlMW1UIuKGienG+YzBzJbW0LGUsXKbphMUjenIj3AK3xSlAHu0Kp
        kA+9rnthYu9ymPxlJYzYfAXdtdXQ29UDl5nO5OU1MGX6lt5AfdafRo0ceX0FCb5XNy211ooM3JXgyMjI
        pVReCnTidIWDbtvceQFKattgmoqJ/qERUFc1gjS/CH5rGKmy+La2hYxV39YDxeTlqvpW0JRIYczsAxih
        kB21/Qqmfl4GI76HoU/Ch/qiQpAWV4KyvAma6xuhu0gOg6X5MNFUCbJUVmJjQfJSnVgdg71qA3cl2MfH
        ZwmVdEG6xKUrInSCuy4OQEFVMyWsSZi6dh0uX6H5sfsCiERi/fk5w1TUNkF2Ts68toWMVVbbAqU1zdB+
        YRCuaK7AqDwdJiw+hOnND8HVH/4Mow5bQZ3OBbKKPkuXNnTr5+N2mpvbaKub/wsFXGmP957tJPZBneCu
        FqmBuxLs7u7+IIW12fDwzJx77cZNmLo6TRl6Cq7SlKQZnYBL5OVLlzUgzs3TZ/Q5wzS2dUIaP2te20LG
        GhqZoAyty/YT0NIzAA2yPBg4/iGMHlwD4157YdLoZRj0NYXellbo00xCR/8o1HcPQlPfMLR0XYKrLeXQ
        72WsS2zS8R+efFVfaUGcgbsSbGdnt8jLy2tzQ33DjGCqhccnr8LAEBUWHb1QXFGv987FyyMgpynpVsOM
        UgEhV+TPa1vIWNqpazB5A6FBF9rl9dCRlaDPyAOxHjBYXQLDJHbcdB10yrOhpK4DxIXVIJCVQF1FJfSn
        RcCE4zcweWQttNt8ldjpvfMFneCaUq6BuxLs6OjIcHZ2XiMFqVQneFQ7AWXVjSSyiax7EfoGNTSHTsDY
        FIVVcQncapgxigKFsmBe20LG0s2/+lJ0ZByG+wdgPMUfpg6shoF8IQ2fQVDHBMHonhegNtwNchVqKKhu
        g7qychgMPgljh9eC9tQmuCaOARkvSlxTGPuyTnBva6aBuxJM3mWcPHnyuZCQEM7MXHyDQvgKjGjH9aE7
        NnkNRidm5uYciRzIMPpImDOMSKq4re23xhq/eoOeQTPAGIUrFSu93odg+Mg7UJOdDhc149AAYhg9vh6G
        vPdDV30dla1a6C8Qw9SOp2Ao0Bw61XK4MamFApUcihXxX9aUJN9TVcxlzPEfC+bkCWSx4rShSFEcRori
        MUqciExx0ixcZOYmIzOPh6y8FIzJS9UTK0lFtiRtlnRkS2fgSDMwDvgYJ8siBBhPJMiFxNw2BxPlIkxS
        EPkzcPPFmJyfi8nKPEKCPCJFh0pKAKYSaQVEoQzTC+V6MooUyC/KN5BRrES+WoWZJSrMKi6qFRSpObqo
        vRXDepiTl6qKlSSNxkijMUbKxFiIQTawkaOHgxxZHHLkcRgnT8B4eSImKBIxMT+ROps0CxeTlFzkKpMJ
        HiarUpBXkIYpBel6UgsziHRMK8ogMjG9KAsziucQIL9YSB3NxszSHMxUizCLEKjFKCjJRUFZHgqJ7HKi
        QoI5FVI9okpAcaWMkM9QpcDc6nzMq8nHnDJVi1CtSiOxfyQeJO4jFhkEx+bFqtgQPpKo8sHEAl/kqgKI
        IEwuCMTkwiDkFQUjrzgEU4rDMLU4HNPU4ZheEo4ZJZFENMFEfikTM8tYRAxmlceioIKDwoo4Ih6zKxOI
        eMypSiCSUFSVjOJqHopreJhbk0KdTEVJbRpK6tKJDARCVsdHWX0myhqyUN4gQEUj0ZSN+U05epTNIlS1
        iLGwJVdPUasEi9ukqO6UItRIO4Xq3DwS+RrxPPEoca9BcHRugJot85rgqU9hSokDpqqdCBdMK3HF9NIz
        mFHmhvxyd8ITM8u9MKvCCwWVXiTiLOZU+pAIXxRV+1Pn/Qh/zKsNoI4HIdQHo7QhhNJyKEJjGMqawlHe
        FEkdj8b8Zibmt7JQ2RqDqtZYLGhjY2E7B4s74ogE9Ao9gS8sfwYfeOABXP/xmyivjcHy3lRU1HGo/TlM
        FPlg1QU+1lzIJARYdykb6/tzsGGQDNKQfVlYlF5NIvcSHxHPEA8YBIdmu6qjpTbjSUUHkas+hNzio8Rx
        5KnNyQAnMLX0BKaVWRJWmF5ujfwKWwppc3SL2IPuET+ioMoBhdWnMafGiXDGWNEJPMs0Rk6uJUoa3QkP
        lDZ5U+l2FuXN5zEq3RL92KYUmp6oag/AgvZAEhuERR3BWNwZgun5brNCX0PjY5v0+9v3foKVfTFo4bgL
        95t9g9WX4rCmPx7r+hNIKJeE8rDxcgo2D6eivJ43mpEf304inYjtxEvEwwbBAfzThaHZFlom7EWWwghZ
        8oMYIz+EbMVh5OQfQY7yCMapTIljaO7+Nb786ozl5/Bm/0zGsaakZY4bv3h13rnt+zeScawxq8oFA5IO
        48rXlxrOL/nzY3jQahNK6r1RWn+WouEcRYIP+sSY6q9Z+uLT6M8+pt//bPPbmCJ3o7a/YlF7OBknCos6
        o1HdxcSSrhgs7YnFsl42VvRxUFTGHuPmMXtJpB9hRKwmHjEIPpdySnk+1XTEN+t79BNsR3/hHgwQ/oRB
        gp8xWLgXg7P3YXDOPrQL2TpPjN7yB9djtNQUmbKjuOXHd/TnH1/yR/zmp3cN127d+z4mqGzJUM/p23Tb
        DZ+/Zjhv7bWTcoIrZtDw4Zd5YKLMCZ974Sn9+Y+/fEu/9Yw8jG9vWIXeUaY0bAJo2ARhbl0ISmaHCzTq
        hks4DZVITFdFaTnCcJ1gf8L4NsFn4i0UrnFGGufET9El6TN0Td6EbsnfoDt3K3rwvkWvlO/QM/U7PJv+
        A55L34Gr1j5r6Kyp2+cYINiHgUJjfGzJo/r2V99eiuFiE1y+6m+G606H7Tbs7zz0EYYKZjynN8BqGpNK
        e0xSOVCidEJeoQvGiu1w37Evcd/xrzE83RqNaLvd+FPMKjuH7mGHMSDBirJ2AOWOQBTVBJMRSHwt5Yu6
        MExRRGpjssJ67uhhx5gjCjvmDs3J6HfQmvU+2sZ8iKdiP0WH2H+gI+czdIr7Ap3iv0SXhE14JnELrnjz
        r4bOHnD6CL3TduC5tF2GtmUrnsbALCP8YsebhrYTXt8Y9jftfpfm9RP491W/Do04uS3GKewo/B1oajtN
        s4QzTW2umFLojmFp1vgsefxMyEHy/NN6dIbavH0jTU/BJDqUBIeR4HASHImpCqaWnRU5J3jfbR62jdyf
        bxmx5Ypp8Co8FroazcPeQouId/FkxHtoHb0e7Zgb0Jb1EZ5ifaI3wstrZsJNh5HDB+jG/RY9uN/jU88+
        YWh3j9uOW43eNhzbBnxr2F++8m8YnWuOr7/zomEIcGQ2NM+fooLEkeZxJ+TqxZ7B1CJPXPv+CrTx2osf
        fbF2JrzDjuKSJx/T74cm2aO0JhrldZT16ynjN7KRr+Jo4wWsbhLqO5upV81LWifD9yrNQj8fMQlYhoeD
        XsTjwSvRPPR1tAh/Ay0j1qJ15NtoE/UebjNdiRs2vzBvHK/54FncZrKGBH+Dm3563XBu7YfLcNmKGcOs
        Xvs8hmb/QqH+671b9ryrH+u683sOf0LFjC0VMQ7II7Gpha6YVkzToNoTjY9vxnXrV2J2mT++/cFq/fUm
        lt/huxtmcgA39ywWNNJ01hyPJa2JWNaejDlFXC1XFKcT7LOgYMuwH1VmIZ+Q4GdI8HMk+O/k5ZXk5dVo
        Ffk62kS/gbbMdbjuk1/H5K1Z+k9PPIxevM14LnUrfvbDynkGeXXdc+iTvBsjxb9gYJoReXW+wbb9vJ48
        akvj9hRVYI6YoXamiusMVVaeGCuw1XsyPMkKgZKUL9MMl/z5cT1PEsdsd2FJWxyWdyRhZRcPa2meru+j
        wqUsbSxVkqgL6TnBK+d52DpsX4lZyOfjhwKX4ZGg5Xg8ZBUJXkOC3yTB69CG+Q7a0di2p7F9mv0x7rN7
        C41OrcNfHN5Bq8BP0JMSnHfKNjyf9gP6ZuxCj4Tv8bjbF+jK/J48a4wROSYYlXuExu1xjKWpyzfxANr7
        7cSoHAuqnR2p/CSvFrmQR92oxPSkcvIsiip8MbfSn8TaoKwmlObWSMxvZGJOaTAGsm0xXe6Hpe1JJJaH
        VV3pWN2TiQ0XsrH5Ug4qqoTjGZDad0fBdlGHKizCtl09HPg6mgatQbOQd/BE2HoK5w0k+GPy8CdoF/0Z
        2rO+QsfYTejE3oIucd/iGRLmnrgDPZJ2k4d/JA/vRZ90YxK9HwMzD2Gw4AiGCI9ieLY5ediSxq0Nxkjs
        aIHhQAsLJ6rLXSmM3Um0J4WyN6YWnKca249EB6KgNARzysNQXBGJeVVMlNSwKSHFU5mZQJUUF1VNKVjY
        nIbFLXwsbRNiWYcIq7vysK5XivKq3Ak+8C/ccQw7Mk/WW0fsw8OBH5Hgj9E85Au0CPsarSI2k+CtNH63
        keAfSPBOdIjZTV7+EV04e0mwMQk+gB6JJjSGD6M37yieTzFDn9QT6Jduhf58awzi22JIpgOGCx1JuDNG
        iVyRJXanFZcXrbjO0crKFxNk/rSCovpdEUzhTdNKYQQtMqLJ4yzMKmGjsITq8TKqwSuo/q6i2rsqjRIV
        1dq1WVRqZqOyQYwFTRJUN8toDCsQKmRT6SC8NDstzWXpXyst5xjHbpvIIxTOm/Bo8GZKWN9RwtpBgnfh
        ycg9JPgnEryPBBuT4P0k+CA6cw6ja7wpuiUcJ9Hm5GUL9E4+ied4NiTaDn3THNAv4zQGZDhjIP8MhmS5
        09zrSaK9MTKHykuxH3k8AGNyg2mJGUpeD8N4iKRlJJO8HkNTE5uWhnG0LEzEjMJkWgbyaBWVRp5Px+xS
        PorKBZhbkY2SSjF9i5VQrS0l8XLK0vnUpryeIRNdvmPhQSf+RKwjzAkWISakx44eqrS1tR2iz6OaoOAQ
        ja+fnyYoKFgTGkrHOoLDNIFBIRo7W0uNu9sZje46v4BAjYPTGY2FxbHb2lzdPDXnzvvSNUEa/8AgujdU
        /wx/eoYfHes470/4BWl8dedDwvTPnIO+QWvoA5/mxAnzS6ZHTNoOmxjVWFqYl5w8aaVycLCXU59hFglt
        M4kgYj+hWzX9WlrSgW7duIY4MBv38bRNMjc3y6G3IJ2xsbEDOuiz6QCLFTvAZLEGoohIJmsgmrYeHmcG
        nJyc9NfozoWEhQ+4nXG5rS0qiqW/P5oVoycymjUQHskaCItkDoRHMQei6Hms2f+lexZ9fx7w9fEZsLKy
        umBsZNRoZGSkNj1qKrE6aZVlZ2ubSn3k3oHEWce50XYPsWJelqaDh4jlxGbClLAnHG3t7NxPnTqlSk1N
        7aB31h0CgbAjM0uo378V+orf4ebmNq+NPpR30GujeW26e+mza0dGZmZHOl9A26wOwW+eRd+dO3x9fTpI
        ZKWJiYnowIEDsWZmZv507El90a1+/tM/m1nv/oO2S4kHDYsHOlhMPE7ollG60N5AbCQ+pNe3QTKZrKKh
        ocFAbW1tBX3NryAPVJDQHOpMOIkTlpWV6a+pr2+oKCktryAvVdzaVlv36zPmnkcfwyv4GRkVwcFBRadP
        n04gcS4WFhb76C3qNxRdn832Q9eXu0HX//XEm8QyQjdk77tV8D3UcD/xMPEYsWQODw+PfYWFhfm9vb1K
        EqmkLxQ59HYziDp0wN7e/n3q5PNk+acDAwMd6DcYypGREQMikUj527bh4WEl/U5DmZGRoaR7kuh+e7p/
        K4l7jbbPU874y63///+x/8SsUF306hz66yseOpj3suvWY+rUWvKiL3XMys7u1HpXV5cn7O1PLaYO/u7W
        63x9fbfR7y+kJBjIQMDhcPhnz56N/U1bJhnQm+7bQWN+Be0/TNFxPz1r0b/qw//q3Lwftfy7V5xz52Ni
        YugXOLezkGH8/f3fJWP5LWQsBwcHhu7VsLW1tR5LS0sGXccwMTnIOHbsKIOMwdi9ezfj008/ZezauYux
        c/suxvr31zO2fb+JYW1jxjh6ZC/j269WMNxcLRmmh3Yygj23/Fs9/wRbs6tl3tu7DwAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>